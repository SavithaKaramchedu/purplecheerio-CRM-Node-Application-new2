{

  "servicename": "sampleservice",
  "routes": [
    {
      "route": "/images",
      "type": "static",
      "configured": true,
      "routeclass": "./images",
      "description": "app specific images are served from the directory ./images under route /images"
    },
    {
      "route": "/",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getLoginPage",
      "description": "Routes to initial page of the web application to login",
      "examples": [
        {
          "param": "/"
        }
      ]
    },
    {
      "route": "/validate",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "validateLogin",
      "description": "Authentication route for the user",
      "examples": [
        {
          "param": "/validate"
        }
      ]
    },
    {
      "route": "/home",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getHomePage",


      "description": "Routes to the main page of the web application",
      "examples": [
        {
          "param": "/home"
        }
      ]
    },
    {
      "route": "/account/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "recorddisplay",


      "description": "Routes to display record value in modal",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/account/:i",
      "type": "put",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updateaccount",


      "description": "Routes to update record value in table",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/account/:i",
      "type": "delete",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deleteaccount",


      "description": "Routes to delete record value in table",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/delete/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deletedisplay",


      "description": "Routes to display id of an record in hidden",
      "examples": [
        {
          "param": "/delete/:i"
        }
      ]
    },
    {
      "route": "/logout",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getBackPage",
      "description": "Route for logging out from application",
      "examples": [
        {
          "param": "/logout"
        }
      ]
    },
 
    {
      "route": "/leads",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getLeadPage",
      "description": "Route for listing all the leads available",
      "examples": [
        {
          "param": "/leads"
        }
      ]
    },
    {
      "route": "/employees",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getEmpPage",
      "description": "Route for listing all the active employees",
      "examples": [
        {
          "param": "/employees"
        }
      ]
    },
    {
      "route": "/contact",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "ContactPage",
      "description": "Route for listing all the active Contacts",
      "examples": [
        {
          "param": "/contact"
        }
      ]
    },
    {
      "route": "/account",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getAccountPage",
      "description": "Route for listing all the active accounts",
      "examples": [
        {
          "param": "/account"
        }
      ]
    },
    {
      "route": "/opportunity",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getOpportunityPage",
      "description": "Route for listing all the available opportunities",
      "examples": [
        {
          "param": "/opportunity"
        }
      ]
    },
   
    {
      "route": "/contact",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addContactPage",
      "description": "Route for creation of new contact",
      "bodyschema": {
        "type": "object",
        "required": [
          "firstname",
          "lastname",
          "accountname",
          "jobtitle",
          "functionname",
          "department",
          "phone",
          "city",
          "fax",
          "mobile",
          "email"
        ],
        "properties": {
          "firstname": {
            "description": "First Name",
            "type": "string"
          },
          "lastname": {
            "description": "Last Name",
            "type": "string"
          },
          "accountname": {
            "description": "Last Name",
            "type": "string"
          },
          "jobtitle": {
            "description": "account",
            "type": "string"
          },
          "functionname": {
            "description": "Function",
            "type": "string"
          },
          "department": {
            "description": "Department or Division",
            "type": "string"
          },
          "phone": {
            "description": "Phone number",
            "type": "string",
            "minLength":3
          },
          "city": {
            "description": "City",
            "type": "string"
          },
          "fax": {
            "description": "Fax number",
            "type": "string",
            "minLength":3
          },
          "mobile": {
            "description": "Mobile number",
            "type": "string",
            "minLength":3
          },
          "email": {
            "description": "Email address",
            "type": "string",
            "format":"email"
          }
        }
      },

      "examples": [
        {
          "param": "/contact",
          "payload": {
            "firstname":"savitha",
            "lastname":"karamchedu",
            "account":"accountname",
            "jobtitle":"software developer",
            "function1":"function1_name",
            "department":"department1",
            "phone":"(123)456-1234",
            "city":"Bangalore",
            "fax":"(123)456-1234",
            "mobile":"(123)456-1234",
            "email":"savitha.karamchedu@ltts.com"
          }
        }
      ]
    },
    
    {
      "route": "/account",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addAccountPage",
      "description": "Route for creation of new account",
      "bodyschema": {
        "type": "object",
        "required": [
          "name",
          "prospect",
          "parentaccount",
          "website",
          "accountcategory",
          "vertical",
          "country",
          "city",
          "state",
          "owner"
        ],
        "properties": {
          "name": {
            "description": "Name",
            "type": "string"
          },
          "prospect": {
            "description": "Prospect",
            "type": "string"
          },
          "parentaccount": {
            "description": "Parent account",
            "type": "string"
          },
          "website": {
            "description": "Website",
            "type": "string"
          },
          "accountcategory": {
            "description": "Account Category",
            "type": "string"
          },
          "vertical": {
            "description": "Vertical",
            "type": "string"
          },
          "country": {
            "description": "Country",
            "type": "string",
            "minLength":3
          },
          "city": {
            "description": "City",
            "type": "string"
          },
          "state": {
            "description": "Fax number",
            "type": "string",
            "minLength":3
          },
          "owner": {
            "description": "Owner of the Account",
            "type": "string"
          }
        }
      },
      "examples": [
        {
          "param": "/account",
          "payload": {
              "name":"Google india",
              "prospect":"yes",
              "parentaccount":"Goolge",
              "website":"www.google.com",
              "accountcategory":"Paltinum",
              "vertical":"ISV",
              "country":"India",
              "city":"Hyderabad",
              "state":"Telangana",
              "owner":"Arpit Bhaderia"
            }
        }
      ]
    },
    
    {
      "route": "/opportunity",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addOpportunity",
      "description": "Route for creation of new opportunity",
      "bodyschema": {
        "type": "object",
        "required": [
          "oppName",
          "Accountopp",
          "PrimaryContact",
          "Source",
          "Exceptedvalue",
          "StartDate",
          "ClosingDate",
          "SalesCycle",
          "Salesphase",
          "Probability",
          "PublishtoForecast",
          "ForecastCategory",
          "convertcategory",
          "Owneropp"
        ],
        "properties": {
          "oppName": {
            "description": "Name of the opportunity",
            "type": "string"
          },
          "Accountopp": {
            "description": "Account of the opportunity",
            "type": "string"
          },
          "PrimaryContact": {
            "description": "Primary contact for the opportunity",
            "type": "string"
          },
          "Source": {
            "description": "Source",
            "type": "string"
          },
          "Exceptedvalue": {
            "description": "Exceptedvalue",
            "type": "string"
          },
          "StartDate": {
            "description": "Start Date",
            "type": "string"
          },
          "ClosingDate": {
            "description": "Closing Date",
            "type": "string",
            "minLength":3
          },
          "SalesCycle": {
            "description": "Sales Cycle",
            "type": "string"
          },
          "Salesphase": {
            "description": "Sales Phase",
            "type": "string",
            "minLength":3
          },
          "Probability": {
            "description": "Probability",
            "type": "string"
          },
          "PublishtoForecast": {
            "description": "Publish to Forecast",
            "type": "string"
          },
          "ForecastCategory": {
            "description": "Forecast Category",
            "type": "string"
          },
          "convertcategory": {
            "description": "convert category",
            "type": "string"
          },
          "Owneropp": {
            "description": "Owner of the opportunity",
            "type": "string"
          }

        }
      },
      "examples": [
        {
          "param": "/opportunity",
          "payload": {
            "oppName":"Google Opportunity",
            "Accountopp":"Google",
            "PrimaryContact":"Arpit",
            "Source":"Current Account",
            "Exceptedvalue":"2000000",
            "StartDate":"31/03/19",
            "ClosingDate":"31/03/20",
            "SalesCycle":"New",
            "Salesphase":"10% - Ideation",
            "Probability":"50%",
            "PublishtoForecast":"Yes",
            "ForecastCategory":"Pipeline",
            "convertcategory":"Consulting",
            "Owneropp":"Arpit"
            }
        }
      ]
    },
   
    {
      "route": "/leads",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addLead",
      "description": "Route for creation of new lead",
      "bodyschema": {
        "type": "object",
        "required": [
                "title",
                "company",
                "firstname",
                "lastname",
                "status",
                "qul",
                "source",
                "category",
                "priority",
                "owner"
        ],
        "properties": {
          "title": {
            "description": "Lead name",
            "type": "string"
          },
          "company": {
            "description": "Company name",
            "type": "string"
          },
          "firstname": {
            "description": "first Name",
            "type": "string"
          },
          "lastname": {
            "description": "Last name",
            "type": "string"
          },
          "status": {
            "description": "status",
            "type": "string"
          },
          "qul": {
            "description": "Qualification level",
            "type": "string"
          },
          "source": {
            "description": "Source of the lead",
            "type": "string",
            "minLength":3
          },
          "category": {
            "description": "Category",
            "type": "string"
          },
          "priority": {
            "description": "Priority",
            "type": "string",
            "minLength":3
          },
          "owner": {
            "description": "Owner of the Lead",
            "type": "string"
          }
        }
      },
      "examples": [
        {
          "param": "/leads",
          "payload": {
            "title":"Lead 1",
            "company":"LTTS",
            "firstname":"Arpit",
            "lastname":"Bhaderia",
            "status":"Accepted",
            "qul":"Cold",
            "source":"Campaign",
            "category":"Consulting",
            "priority":"Immedaite",
            "owner":"Arpit"
            }
        }
      ]
    },
    {
      "route": "/edit/:id",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "editLeadPage",
      "description": "Get details of lead to be edited",
      "examples": [
        {
          "param": "/edit/:id"
        }
      ]
    },
    {
      "route": "/edit/:id",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "editLead",
      "description": "Edit lead choosen",
      "examples": [
        {
          "param": "/edit/:id"
        }
      ]
    },
    {
      "route": "/delete/:id",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deleteLead",
      "description": "Delete specific lead details choosen",
      "examples": [
        {
          "param": "/delete/:id"
        }
      ]
    },
    {
      "route": "/sampleservice/something/:value1/:value2",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "RouteGetSomething",
      "description": "Hello world",
      "examples": [
        {
          "param": "/sampleservice/something/ltts/11"
        }
      ],
      "paramschema": {
        "type": "object",
        "required": [
          "value1",
          "value2"
        ],
        "properties": {
          "value1": {
            "description": "value1 is string e.g. foo",
            "type": "string",
            "minLength": 4,
            "maxLength": 6
          },
          "value2": {
            "description": "value2 is number e.g. 100",
            "type": "integer",
            "minimum": 10,
            "maximum": 15
          }
        }
      }
    },
    {
      "route": "/sampleservice/something/:value1/:value2",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "RoutePostSomething",
      "description": "Hello world",
      "examples": [
        {
          "param": "/sampleservice/something/foo/100",
          "payload": {
            "value3": {
              "value5": "bar"
            },
            "value4": "blah"
          }
        }
      ],
      "paramschema": {
        "type": "object",
        "required": [
          "value1",
          "value2"
        ],
        "properties": {
          "value1": {
            "description": "value1 is string e.g. foo",
            "type": "string"
          },
          "value2": {
            "description": "value2 is number e.g. 100",
            "type": "integer"
          }
        }
      },
      "bodyschema": {
        "type": "object",
        "required": [
          "value3",
          "value4"
        ],
        "properties": {
          "value3": {
            "description": "value3 is an object e.g. {'value5':'bar'}",
            "type": "object",
            "required": [
              "value5"
            ],
            "properties": {
              "value5": {
                "description": "value5 is a string inside the value3 object e.g. bar",
                "type": "string"
              }
            }
          },
          "value4": {
            "description": "value4 is string e.g. blah",
            "type": "string"
          }
        }
      }
    }
  ]
}